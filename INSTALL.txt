
  Web:   http://www.cbica.upenn.edu/sbia/
  Email: sbia-software at uphs.upenn.edu

  Copyright (c) 2012-2016 University of Pennsylvania. All rights reserved.
  See http://www.cbica.upenn.edu/sbia/software/license.html or COPYING file.



INTRODUCTION
============

  This document contains the build and installation instructions.


OBTAINING A COPY OF THE SOFTWARE
================================

  Please see the corresponding section of the BASIS how-to guide [2].



INSTALLING A BINARY DISTRIBUTION PACKAGE
========================================

  Please see the corresponding section of the BASIS how-to guide [2].



RUNTIME REQUIREMENTS
====================

  - dramms/1.4.1 (or higher)
	    Web Site: http://www.cbica.upenn.edu/sbia/software/dramms/
	    Download: http://www.cbica.upenn.edu/sbia/software/dramms/download.html

  - ants/1.9.x (or higher)
	    Web Site: http://stnava.github.io/ANTs/
	    Download: http://stnava.github.io/ANTs/

  - mico/1.0.0 (or higher)
	Download: http://www.cbica.upenn.edu/sbia/software/request.php?software=mico

  - afni/2008_07_18_1710/11_20_2009 (or higher)
	    Web Site: http://afni.nimh.nih.gov/afni/

  - fsl/4.1.5 (or higher)
	    Web Site: http://fsl.fmrib.ox.ac.uk/fsl/fslwiki/
	    Download: http://fsl.fmrib.ox.ac.uk/fsldownloads/fsldownloadmain.html

BUILDING THE SOFTWARE FROM SOURCES
==================================

  Build Dependencies
  ------------------

This repository requries that you have `git lfs` installed and initiated in order to
get the Template NiFTI files.

https://github.com/git-lfs/git-lfs/releases/tag/v3.2.0

**Install `git lfs` and run `git lfs install` BEFORE cloning.**

  Build Steps
  -----------

  The common steps to build, test, and install software based on CMake,
  including this software, are as follows:

  1. Extract source files.
  2. Create build directory and change to it.
  3. Run CMake to configure the build tree.
  4. Build the software using selected build tool.
  5. Test the software (optional). NOT INCLUDED IN THIS PACKAGE
  6. Install the built files.

  On Unix-like systems with GNU Make as build tool, these build steps can be
  summarized by the following sequence of commands executed in a shell,
  where $package and $version are shell variables which represent the name
  of this package and the obtained version of the software.

  $ tar xzf $package-$version-source.tar.gz
  $ mkdir $package-$version-build
  $ cd $package-$version-build
  $ cmake -D CMAKE_INSTALL_PREFIX=/Path/To/Install/Dir -D SCHEDULER=??? ..
  $ make
  $ make test (optional) NOT INCLUDED IN THIS PACKAGE
  $ make install

  An exhaustive list of minimum build dependencies, including the build tools
  along detailed step-by-step build, test, and installation instructions can
  be found in the corresponding "Building the Software from Sources" section
  of the BASIS how-to guide on software installation [2].

  Please refer to this guide first if you are uncertain about above steps or
  have problems to build, test, or install the software on your system.
  If this guide does not help you resolve the issue, please contact us at
  <sbia-software at uphs.upenn.edu>. In case of failing tests, please attach
  the output of the following command to your email:

  $ ctest -V >& test.log

  In the following, only package-specific CMake settings available to
  configure the build and installation of this software are documented.


  CMake Options
  -------------

  (no additional CMake options considered by this package)


  Advanced CMake Options
  ----------------------

  (no additional advanced CMake options considered by this package)



REFERENCES
==========

  [1] http://www.cbica.upenn.edu/sbia/software/basis/

  [2] http://www.cbica.upenn.edu/sbia/software/basis/howto/install/
